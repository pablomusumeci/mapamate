{"version":3,"sources":["components/GoogleMapDemo.js","components/Store.js","components/SearchBar.js","components/StoreList.js","components/App.js","index.js"],"names":["styles","markerObjects","MapContainer","state","showingInfoWindow","activeMarker","selectedPlace","isEqual","a","b","length","i","onMarkerClick","props","marker","e","console","log","setState","onMapClicked","onClose","onMarkerMounted","element","push","getMarkers","storeList","map","store","index","id","ref","onClick","position","lat","coordinates","latitude","lng","longitude","key","name","site","address","location","address1","rating","getMapBounds","stores","bounds","google","maps","LatLngBounds","extend","prevProps","this","selectedMarkerIndex","markers","event","trigger","mapProps","setOptions","defaultZoom","options","createMapOptions","defaultCenter","onReady","_mapLoaded","visible","className","href","React","Component","GoogleApiWrapper","apiKey","process","Store","onStoreClick","split","w","toUpperCase","substr","toLowerCase","join","StoreList","require","config","App","GoogleMapDemo","ReactDOM","render","document","getElementById"],"mappings":"w0IAIMA,G,MAAS,CACb,CACI,YAAe,QACf,YAAe,WACf,QAAW,CACP,CACI,WAAc,MAElB,CACI,MAAS,aAIrB,CACI,YAAe,YACf,YAAe,gBACf,QAAW,CACP,CACI,MAAS,aAIrB,CACI,YAAe,MACf,YAAe,gBACf,QAAW,CACP,CACI,MAAS,aAIrB,CACI,YAAe,MACf,YAAe,mBACf,QAAW,CACP,CACI,MAAS,aAIrB,CACI,YAAe,MACf,YAAe,qBACf,QAAW,CACP,CACI,MAAS,aAIrB,CACI,YAAe,WACf,YAAe,WACf,QAAW,CACP,CACI,WAAc,cAElB,CACI,MAAS,aAIrB,CACI,YAAe,OACf,YAAe,gBACf,QAAW,CACP,CACI,WAAc,gBAI1B,CACI,YAAe,OACf,YAAe,mBACf,QAAW,CACP,CACI,MAAS,aAIrB,CACI,YAAe,OACf,YAAe,qBACf,QAAW,CACP,CACI,MAAS,aAIrB,CACI,YAAe,OACf,YAAe,cACf,QAAW,CACP,CACI,WAAc,SAI1B,CACI,YAAe,aACf,YAAe,WACf,QAAW,CACP,CACI,MAAS,aAIrB,CACI,YAAe,gBACf,YAAe,WACf,QAAW,CACP,CACI,MAAS,aAIrB,CACI,YAAe,eACf,YAAe,WACf,QAAW,CACP,CACI,MAAS,aAIrB,CACI,YAAe,UACf,QAAW,CACP,CACI,WAAc,SAI1B,CACI,YAAe,iBACf,YAAe,kBACf,QAAW,CACP,CACI,WAAc,MAElB,CACI,MAAS,aAIrB,CACI,YAAe,iBACf,YAAe,gBACf,QAAW,CACP,CACI,MAAS,WAEb,CACI,WAAc,SAI1B,CACI,YAAe,iBACf,YAAe,qBACf,QAAW,CACP,CACI,MAAS,WAEb,CACI,WAAc,MAElB,CACI,OAAU,OAItB,CACI,YAAe,iBACf,YAAe,mBACf,QAAW,CACP,CACI,MAAS,aAIrB,CACI,YAAe,8BACf,YAAe,SACf,QAAW,CACP,CACI,WAAc,WAMxBC,EAAgB,GAEPC,EAAb,4MACEC,MAAQ,CACNC,mBAAmB,EACnBC,aAAc,GACdC,cAAe,IAJnB,EAOEC,QAAU,SAACC,EAAGC,GACZ,GAAID,EAA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","file":"static/js/main.30843dd6.chunk.js","sourcesContent":["import React from \"react\";\nimport { Map, GoogleApiWrapper, Marker, InfoWindow } from \"google-maps-react\";\nimport \"./GoogleMap.css\";\n\nconst styles = [\n  {\n      \"featureType\": \"water\",\n      \"elementType\": \"geometry\",\n      \"stylers\": [\n          {\n              \"visibility\": \"on\"\n          },\n          {\n              \"color\": \"#aee2e0\"\n          }\n      ]\n  },\n  {\n      \"featureType\": \"landscape\",\n      \"elementType\": \"geometry.fill\",\n      \"stylers\": [\n          {\n              \"color\": \"#abce83\"\n          }\n      ]\n  },\n  {\n      \"featureType\": \"poi\",\n      \"elementType\": \"geometry.fill\",\n      \"stylers\": [\n          {\n              \"color\": \"#769E72\"\n          }\n      ]\n  },\n  {\n      \"featureType\": \"poi\",\n      \"elementType\": \"labels.text.fill\",\n      \"stylers\": [\n          {\n              \"color\": \"#7B8758\"\n          }\n      ]\n  },\n  {\n      \"featureType\": \"poi\",\n      \"elementType\": \"labels.text.stroke\",\n      \"stylers\": [\n          {\n              \"color\": \"#EBF4A4\"\n          }\n      ]\n  },\n  {\n      \"featureType\": \"poi.park\",\n      \"elementType\": \"geometry\",\n      \"stylers\": [\n          {\n              \"visibility\": \"simplified\"\n          },\n          {\n              \"color\": \"#8dab68\"\n          }\n      ]\n  },\n  {\n      \"featureType\": \"road\",\n      \"elementType\": \"geometry.fill\",\n      \"stylers\": [\n          {\n              \"visibility\": \"simplified\"\n          }\n      ]\n  },\n  {\n      \"featureType\": \"road\",\n      \"elementType\": \"labels.text.fill\",\n      \"stylers\": [\n          {\n              \"color\": \"#5B5B3F\"\n          }\n      ]\n  },\n  {\n      \"featureType\": \"road\",\n      \"elementType\": \"labels.text.stroke\",\n      \"stylers\": [\n          {\n              \"color\": \"#ABCE83\"\n          }\n      ]\n  },\n  {\n      \"featureType\": \"road\",\n      \"elementType\": \"labels.icon\",\n      \"stylers\": [\n          {\n              \"visibility\": \"off\"\n          }\n      ]\n  },\n  {\n      \"featureType\": \"road.local\",\n      \"elementType\": \"geometry\",\n      \"stylers\": [\n          {\n              \"color\": \"#A4C67D\"\n          }\n      ]\n  },\n  {\n      \"featureType\": \"road.arterial\",\n      \"elementType\": \"geometry\",\n      \"stylers\": [\n          {\n              \"color\": \"#9BBF72\"\n          }\n      ]\n  },\n  {\n      \"featureType\": \"road.highway\",\n      \"elementType\": \"geometry\",\n      \"stylers\": [\n          {\n              \"color\": \"#EBF4A4\"\n          }\n      ]\n  },\n  {\n      \"featureType\": \"transit\",\n      \"stylers\": [\n          {\n              \"visibility\": \"off\"\n          }\n      ]\n  },\n  {\n      \"featureType\": \"administrative\",\n      \"elementType\": \"geometry.stroke\",\n      \"stylers\": [\n          {\n              \"visibility\": \"on\"\n          },\n          {\n              \"color\": \"#87ae79\"\n          }\n      ]\n  },\n  {\n      \"featureType\": \"administrative\",\n      \"elementType\": \"geometry.fill\",\n      \"stylers\": [\n          {\n              \"color\": \"#7f2200\"\n          },\n          {\n              \"visibility\": \"off\"\n          }\n      ]\n  },\n  {\n      \"featureType\": \"administrative\",\n      \"elementType\": \"labels.text.stroke\",\n      \"stylers\": [\n          {\n              \"color\": \"#ffffff\"\n          },\n          {\n              \"visibility\": \"on\"\n          },\n          {\n              \"weight\": 4.1\n          }\n      ]\n  },\n  {\n      \"featureType\": \"administrative\",\n      \"elementType\": \"labels.text.fill\",\n      \"stylers\": [\n          {\n              \"color\": \"#495421\"\n          }\n      ]\n  },\n  {\n      \"featureType\": \"administrative.neighborhood\",\n      \"elementType\": \"labels\",\n      \"stylers\": [\n          {\n              \"visibility\": \"off\"\n          }\n      ]\n  }\n];\n\nlet markerObjects = [];\n\nexport class MapContainer extends React.Component {\n  state = {\n    showingInfoWindow: false,\n    activeMarker: {},\n    selectedPlace: {},\n  };\n\n  isEqual = (a, b) => {\n    if (a.length !== b.length) return \"False\";\n    else {\n      // comapring each element of array\n      for (var i = 0; i < a.length; i++) if (a[i] !== b[i]) return \"False\";\n      return \"True\";\n    }\n  };\n\n  onMarkerClick = (props, marker, e) => {\n    console.log(props)\n    this.setState({\n      selectedPlace: props,\n      activeMarker: marker,\n      showingInfoWindow: true,\n    });\n  };\n\n  onMapClicked = (props) => {\n    if (this.state.showingInfoWindow) {\n      this.setState({\n        showingInfoWindow: false,\n        activeMarker: null,\n      });\n    }\n  };\n\n  onClose = () => {\n    if (this.state.showingInfoWindow) {\n      this.setState({\n        showingInfoWindow: false,\n        activeMarker: null,\n      });\n    }\n  };\n\n  componentDidUpdate(prevProps) {\n    if (!this.isEqual(prevProps.storeList, this.props.storeList)) {\n      this.setState(() => ({\n        showingInfoWindow: false,\n        activeMarker: {},\n        selectedPlace: {},\n      }));\n    }\n\n    if (prevProps.selectedMarkerIndex !== this.props.selectedMarkerIndex) {\n      if (markerObjects.length > 0 && this.props.selectedMarkerIndex) {\n        let markers = markerObjects;\n\n        new this.props.google.maps.event.trigger(\n          markers[this.props.selectedMarkerIndex - 1].marker,\n          \"click\"\n        );\n      }\n    }\n  }\n\n  onMarkerMounted = (element) => {\n    markerObjects.push(element);\n  };\n\n  getMarkers = () => {\n    const markers = this.props.storeList.map((store, index) => {\n      return (\n        <Marker\n          id={index}\n          ref={this.onMarkerMounted}\n          onClick={this.onMarkerClick}\n          position={{\n            lat: store.coordinates.latitude,\n            lng: store.coordinates.longitude,\n          }}\n          // icon={{\n          //   url: './mate.png',\n          // }}\n          key={store.id}\n          name={store.name}\n          site={store.site}\n          address={store.location.address1}\n          index={index + 1}\n          rating={store.rating}\n        />\n      );\n    });\n    return markers;\n  };\n\n  getMapBounds = (stores) => {\n    let bounds = new this.props.google.maps.LatLngBounds();\n    for (let index = 0; index < this.props.storeList.length; index++) {\n      bounds.extend({\n        lat: this.props.storeList[index].coordinates.latitude,\n        lng: this.props.storeList[index].coordinates.longitude,\n      });\n    }\n    return bounds;\n  };\n\n \n _mapLoaded(mapProps, map) {\n    map.setOptions({\n       styles: styles\n    })\n }\n\n  render() {\n    return (\n      <Map\n        google={this.props.google}\n        defaultZoom={8}\n        options={this.createMapOptions}\n        defaultCenter={{\n          lat: 52.378711410477365,\n          lng: 4.883293797906577,\n        }}\n        onClick={this.onMapClicked}\n        onReady={(mapProps, map) => this._mapLoaded(mapProps, map)}\n        bounds={this.getMapBounds()}\n      >\n        {this.getMarkers()}\n        <InfoWindow\n          position={this.state.selectedPlace.position}\n          visible={this.state.showingInfoWindow}\n          onClose={this.onClose}\n        >\n          <div id=\"info-window\" className=\"store-info-window\">\n            <div className=\"store-info-name\">\n              {this.state.selectedPlace.name}\n            </div>\n            <div className=\"store-info-address\">\n              <div className=\"icon\">\n                <i className=\"fas fa-location-arrow\"></i>\n              </div>\n              <span> {this.state.selectedPlace.address}</span>\n            </div>\n            <div className=\"store-info-phone\">\n              <div className=\"icon\">\n                <i className=\"fas fa-link\"></i>\n              </div>\n              <div className=\"roboto-light store-phone-number\">\n            <a href={this.state.selectedPlace.site}>{this.state.selectedPlace.site}</a>\n          </div>\n            </div>\n          </div>\n        </InfoWindow>\n      </Map>\n    );\n  }\n}\n\nexport default GoogleApiWrapper({\n  apiKey: process.env.REACT_APP_MAPS_API_KEY,\n})(MapContainer);\n","import React from \"react\";\nimport \"./Store.css\";\n\nconst Store = ({ store, index, onStoreClick }) => {\n  return (\n    <div\n      className=\"store-container\"\n      onClick={(event) => {\n        onStoreClick(index+1, event);\n      }}\n    >\n      <div className=\"store-container-background\">\n        <div className=\"store-info-container\">\n          <div className=\"store-address\">\n            <span className=\"roboto-regular\">\n              {store.name\n                .split(\" \")\n                .map((w) => w[0].toUpperCase() + w.substr(1).toLowerCase())\n                .join(\" \")}\n            </span>\n            <span className=\"roboto-light\"> {store.location.address1}</span>\n          </div>\n\n          <div className=\"roboto-light store-phone-number\">\n            <a href={store.site}>{store.site}</a>\n          </div>\n        </div>\n        <div className=\"store-number-container\">\n          <div className=\"store-number\">{index + 1}</div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Store;\n","import React from \"react\";\nimport \"./SearchBar.css\";\n\nclass SearchBar extends React.Component {\n  state = { location: \"Amsterdam\" };\n\n  handleLocationInputChange = (event) => {\n    let location = event.target.value;\n    this.setState(() => ({ location }));\n  };\n  onKeyUp = (e) => {\n    if (e.key === \"Enter\") {\n      this.props.onFormSubmit(this.state.location);\n    }\n  };\n\n  render() {\n    return (\n      <div className=\"search-bar\">\n        <div className=\"search-container\">\n          <div className=\"search\">\n            <input\n              type=\"text\"\n              value={this.state.location}\n              placeholder=\"Enter Location\"\n              id=\"location\"\n              onChange={this.handleLocationInputChange}\n              onKeyUp={this.onKeyUp}\n            />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default SearchBar;\n","import React from \"react\";\nimport Store from \"./Store\";\nimport \"./StoreList.css\";\n\nconst StoreList = ({ storeList, onStoreClick }) => {\n  let stores = storeList.map((store, index) => {\n    return (\n      <Store\n        store={store}\n        index={index}\n        key={store.name}\n        onStoreClick={onStoreClick}\n      />\n    );\n  });\n\n\n  return (\n    <div className=\"stores-list-container\">\n      <div className=\"stores-list\">{stores}</div>\n    </div>\n  );\n};\n\nexport default StoreList;\n","import React from \"react\";\nimport GoogleMapDemo from \"./GoogleMapDemo\";\nimport \"./App.css\";\nimport SearchBar from \"./SearchBar\";\nimport StoreList from \"./StoreList\";\nimport stores from \"../stores.json\";\n\n\nrequire('dotenv').config()\n\nclass App extends React.Component {\n  state = { storeList: stores, selectedMarkerIndex: null };\n\n  onStoreClick = (index) => {\n    this.setState(() => ({ selectedMarkerIndex: index }));\n  };\n\n  render() {\n    return (\n      <div>\n        <div className=\"title roboto-thin\">Mapamate 🧉</div>\n        <GoogleMapDemo\n          storeList={this.state.storeList}\n          selectedMarkerIndex={this.state.selectedMarkerIndex}\n        />\n        <StoreList\n          storeList={this.state.storeList}\n          onStoreClick={this.onStoreClick}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\n\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}